// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "09/30/2021 11:04:26"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          nsubburaj_lab3_verilog
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module nsubburaj_lab3_verilog_vlg_vec_tst();
// constants                                           
// general purpose registers
reg level1;
reg level2;
reg level3;
reg level4;
reg level5;
reg level6;
reg level7;
// wires                                               
wire LEDG;
wire LEDR;

// assign statements (if any)                          
nsubburaj_lab3_verilog i1 (
// port map - connection between master ports and signals/registers   
	.LEDG(LEDG),
	.LEDR(LEDR),
	.level1(level1),
	.level2(level2),
	.level3(level3),
	.level4(level4),
	.level5(level5),
	.level6(level6),
	.level7(level7)
);
initial 
begin 
#1000000 $finish;
end 

// level1
always
begin
	level1 = 1'b0;
	level1 = #125000 1'b1;
	#125000;
end 

// level2
always
begin
	level2 = 1'b0;
	level2 = #125000 1'b1;
	#125000;
end 

// level3
initial
begin
	repeat(4)
	begin
		level3 = 1'b0;
		level3 = #105000 1'b1;
		# 105000;
	end
	level3 = 1'b0;
	level3 = #105000 1'b1;
end 

// level4
initial
begin
	level4 = 1'b0;
	level4 = #275000 1'b1;
	level4 = #275000 1'b0;
	level4 = #275000 1'b1;
end 

// level5
always
begin
	level5 = 1'b0;
	level5 = #250000 1'b1;
	#250000;
end 

// level6
initial
begin
	level6 = 1'b0;
	level6 = #275000 1'b1;
	level6 = #275000 1'b0;
	level6 = #275000 1'b1;
end 

// level7
initial
begin
	level7 = 1'b0;
	level7 = #300000 1'b1;
	level7 = #300000 1'b0;
	level7 = #300000 1'b1;
end 
endmodule

